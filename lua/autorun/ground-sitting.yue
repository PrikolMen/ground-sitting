addonName = "Ground Sitting"

PLAYER, ENTITY = FindMetaTable( "Player" ), FindMetaTable( "Entity" )
:Length2DSqr = FindMetaTable( "Vector" )
:GetMoveType, :IsOnGround = ENTITY
MOVETYPE_WALK = MOVETYPE_WALK
:Alive, :InVehicle = PLAYER
SERVER = SERVER
:Add = hook

isSittingOnGround = nil
do

    :GetNW2Bool = ENTITY

    isSittingOnGround = =>
        return GetNW2Bool( @, addonName )

    PLAYER.IsSittingOnGround = isSittingOnGround

do

    mp_sitting_on_ground_attack = CreateConVar( "mp_sitting_on_ground_attack", "0", bit.bor( FCVAR_REPLICATED, FCVAR_NOTIFY, FCVAR_ARCHIVE ), "Allows players to attack while sitting on the ground.", 0, 1 )
    :KeyDown, :AddKey, :RemoveKey, :ClearMovement = FindMetaTable( "CUserCmd" )
    IN_ATTACK, IN_ATTACK2 = IN_ATTACK, IN_ATTACK2
    :GetVelocity = ENTITY
    IN_SPEED = IN_SPEED
    IN_DUCK = IN_DUCK

    Add "StartCommand", addonName, ( cmd ) =>
        unless isSittingOnGround( @ )
            return

        if SERVER and ( not Alive( @ ) or not IsOnGround( @ ) or GetMoveType( @ ) ~= MOVETYPE_WALK or InVehicle( @ ) )
            @RequestSittingOnGround( false )
            return

        if Length2DSqr( GetVelocity( @ ) ) < 1
            if KeyDown( cmd, IN_ATTACK ) and not mp_sitting_on_ground_attack\GetBool!
                RemoveKey( cmd, IN_ATTACK )

            if KeyDown( cmd, IN_ATTACK2 ) and not mp_sitting_on_ground_attack\GetBool!
                RemoveKey( cmd, IN_ATTACK2 )

        if KeyDown( cmd, IN_DUCK )
            if KeyDown( cmd, IN_SPEED )
                RemoveKey( cmd, IN_SPEED )

            return

        AddKey( cmd, IN_DUCK )
        ClearMovement( cmd )

do

    ACT_HL2MP_IDLE = ACT_HL2MP_IDLE
    :LookupSequence = ENTITY

    Add "CalcMainActivity", addonName, ( velocity ) =>
        if isSittingOnGround( @ ) and Length2DSqr( velocity ) < 1
            return ACT_HL2MP_IDLE, LookupSequence( @, "pose_ducking_02" )

unless SERVER
    return

Add "CanPlayerGroundSit", addonName, ( reqested ) =>
    unless reqested
        return

    unless Alive( @ ) and IsOnGround( @ )
        return false

    if GetMoveType( @ ) ~= MOVETYPE_WALK or InVehicle( @ )
        return false

requestSittingOnGround = nil
do

    :Call = hook

    requestSittingOnGround = ( reqested, force ) =>
        if isSittingOnGround( @ ) == reqested or ( not force and Call( "CanPlayerGroundSit", nil, @, reqested ) == false )
            return false

        @SetNW2Bool( addonName, reqested )
        Call( "PlayerGroundSit", nil, @, reqested )
        return true

    PLAYER.RequestSittingOnGround = requestSittingOnGround

do

    :TraceLine = util
    IN_WALK = IN_WALK
    IN_JUMP = IN_JUMP
    IN_USE = IN_USE
    trace = {}

    Add "KeyPress", addonName, ( key ) =>
        switch key
            when IN_USE
                unless @KeyDown( IN_WALK ) and @Crouching!
                    return

                trace.start = @GetShootPos!
                trace.endpos = trace.start + @GetAimVector! * 72
                trace.filter = @

                if not TraceLine( trace ).Hit or @EyeAngles![ 1 ] < 80
                    return false

                requestSittingOnGround( @, true )

            when IN_JUMP
                requestSittingOnGround( @, false )

Add "PlayerShouldTaunt", addonName, =>
    if isSittingOnGround( @ )
        return false

Add "PlayerGroundSit", addonName, ( isEntered ) =>
    @m_bNextGroundSit = CurTime! + ( isEntered and 0.5 or 1 )

concommand.Add "ground_sit", =>
    if ( @m_bNextGroundSit or 0 ) > CurTime!
        return

    requestSittingOnGround( @, not isSittingOnGround( @ ) )
